import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class Produto {

    static class produto {
        private String nome;
        private String codigo;
        private double preco;
        private int quantidade;

        public produto(String nome, String codigo, double preco, int quantidade) {
            this.nome = nome;
            this.codigo = codigo;
            this.preco = preco;
            this.quantidade = quantidade;
        }

        public String getNome() {
            return nome;
        }

        public String getCodigo() {
            return codigo;
        }

        public double getPreco() {
            return preco;
        }

        public int getQuantidade() {
            return quantidade;
        }

        public void setQuantidade(int quantidade) {
            this.quantidade = quantidade;
        }

        public void atualizarPreco(double novoPreco) {
            this.preco = novoPreco;
        }

        @Override
        public String toString() {
            return String.format("Produto: %s | Código: %s | Preço: R$ %.2f | Quantidade: %d", nome, codigo, preco, quantidade);
        }
    }

    public static void main(String[] args) {
        List<produto> estoque = new ArrayList<>();
        Scanner scanner = new Scanner(System.in);
        String opcao;

        do {
            System.out.println("\n=== Menu de Gerenciamento de Estoque ===");
            System.out.println("1. Adicionar Produto");
            System.out.println("2. Atualizar Produto");
            System.out.println("3. Remover Produto");
            System.out.println("4. Listar Produtos");
            System.out.println("5. Sair");
            System.out.print("Escolha uma opção: ");
            opcao = scanner.nextLine();

            switch (opcao) {
                case "1":
                    adicionarProduto(estoque, scanner);
                    break;
                case "2":
                    atualizarProduto(estoque, scanner);
                    break;
                case "3":
                    removerProduto(estoque, scanner);
                    break;
                case "4":
                    listarProdutos(estoque);
                    break;
                case "5":
                    System.out.println("Saindo do sistema. Até logo!");
                    break;
                default:
                    System.out.println("Opção inválida. Tente novamente.");
            }
        } while (!opcao.equals("5"));

        scanner.close();
    }

    private static void adicionarProduto(List<produto> estoque, Scanner scanner) {
        System.out.print("Nome do produto: ");
        String nome = scanner.nextLine();
        System.out.print("Código do produto: ");
        String codigo = scanner.nextLine();
        System.out.print("Preço do produto: ");
        double preco = Double.parseDouble(scanner.nextLine());
        System.out.print("Quantidade em estoque: ");
        int quantidade = Integer.parseInt(scanner.nextLine());
        estoque.add(new produto(nome, codigo, preco, quantidade));
        System.out.println("Produto adicionado com sucesso!");
    }

    private static void atualizarProduto(List<produto> estoque, Scanner scanner) {
        System.out.print("Código do produto a ser atualizado: ");
        String codigo = scanner.nextLine();
        produto produto = buscarProdutoPorCodigo(estoque, codigo);
        if (produto != null) {
            System.out.print("Novo preço: ");
            double novoPreco = Double.parseDouble(scanner.nextLine());
            System.out.print("Nova quantidade: ");
            int novaQuantidade = Integer.parseInt(scanner.nextLine());
            produto.atualizarPreco(novoPreco);
            produto.setQuantidade(novaQuantidade);
            System.out.println("Produto atualizado com sucesso!");
        } else {
            System.out.println("Produto não encontrado.");
        }
    }

    private static void removerProduto(List<produto> estoque, Scanner scanner) {
        System.out.print("Código do produto a ser removido: ");
        String codigo = scanner.nextLine();
        produto produto = buscarProdutoPorCodigo(estoque, codigo);
        if (produto != null) {
            estoque.remove(produto);
            System.out.println("Produto removido com sucesso!");
        } else {
            System.out.println("Produto não encontrado.");
        }
    }

    private static void listarProdutos(List<produto> estoque) {
        System.out.println("Lista de Produtos:");
        if (estoque.isEmpty()) {
            System.out.println("Nenhum produto encontrado.");
        } else {
            for (produto produto : estoque) {
                System.out.println(produto);
            }
        }
    }

    private static produto buscarProdutoPorCodigo(List<produto> estoque, String codigo) {
        for (produto produto : estoque) {
            if (produto.getCodigo().equalsIgnoreCase(codigo)) {
                return produto;
            }
        }
        return null;
    }
}
